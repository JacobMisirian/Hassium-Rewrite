func main () {
	lexer = new Lexer ();
	foreach (tok in lexer.scan (input ()))
		println (tok.Type + "  " + tok.Value);
}


class Lexer {
	func new () {}

	func scan (source) {
		this.code = source;
		this.position = 0;
		result = [];
		while (this.peekChar () != -1) {
			this.whiteSpace ();
			println (this.peekChar ());
			if (this.peekChar ().isLetterOrDigit ())
				result.add (this.scanData ());
			else if (this.peekChar () == '"')
				result.add (this.scanString ());
			else if (this.peekChar () == ';')
				result.add (new Token("SEMICOLON", readChar ().toString ()));
		}

		return result;
	}

	func scanData () {
		str = "";
		println ("MAde str");
		while (this.peekChar ().isLetterOrDigit ()) {
			println (this.peekChar ());
			str += this.readChar ().toString ();
		}
		return new Token ("IDENTIFIER", str);
	}

	func scanString () {
		this.readChar ();
		str = "";
		while (this.peekChar () != '"')
			str += this.readChar ();
		this.readChar ();
		return new Token ("STRING", str);
	}

	func whiteSpace () {
		while (this.peekChar () != -1) {
			if (this.peekChar ().isWhiteSpace ())
				this.readChar ();
			else
				break;
		}
	}

	func peekChar () {
		if (this.position < this.code.length) return this.code [this.position];
		return -1;
	}

	func readChar () {
		if (this.position < this.code.length)
		{
			this.position++;
			return this.code [this.position - 1];
		}
		return -1;
	}
}

class Token {
	func new (type, val) {
		this.Type = type;
		this.Val = val;
	}
}
